<%= form_for(@entity_type) do |f| %>
  <% if @entity_type.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@entity_type.errors.count, "error") %> prohibited this entity_type from being saved:</h2>

      <ul>
      <% @entity_type.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  
  <div class="field required">
    <%= f.label :name, "Name" %>
    <%= f.text_field :name %>
  </div>
  
  <%= field_set_tag "Known Aliases", :class => "collapsible" do %>
    <div class="fieldset-wrapper">
      <div class="description">
        Other terms this type might be known as. This is used both for namespacing (so that users can't create an entity type for "MySQL" when one for "Database" already exists, for example) and to aide in advanced searching.
      </div>
      <%= f.fields_for :entity_type_aliases do |alias_form| %>
        <%= render 'entity_types/alias_form_fields', :f => alias_form %>
      <% end %>
      <%= link_to_add_fields "Add another", f, :entity_type_aliases, 'entity_types/alias_form_fields' %>
    </div>
  <% end %>
  
  <%= field_set_tag "Configuration", :class => "collapsible collapsed" do %>
    <div class="fieldset-wrapper sortable">
      <div class="description">
        Any options you add here will appear as default fields when a user creates a new entity with this type.
      </div>
      <%= f.fields_for :form_configs do |rows_form| %>
        <%= render 'entity_types/form_config_form_fields', :f => rows_form %>
      <% end %>
      <%= link_to_add_fields "Add another", f, :form_config, 'entity_types/form_config_form_fields' %>
    </div>
  <% end %>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
